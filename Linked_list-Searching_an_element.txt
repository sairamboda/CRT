Linked list - Searching an element

Write a Program to search an element from the list.

Input Format

Read elements upto -1

Constraints

1<=n<=10^7

Output Format

print output

Sample Input 0

1
2
3
4
-1
3
Sample Output 0

3 is present in the list
Sample Input 1

1
2
3
4
5
-1
4
Sample Output 1

4 is present in the list
Sample Input 2

23
11
44
53
3
56
-1
88
Sample Output 2

88 not present in the list

code:

class node:
    def __init__(self,data):
        self.data=data
        self.next=None
class sl:
    def __init__(self):
        self.head=None
        self.tail=None
    def create(self,data):
        n=node(data)
        if self.head==None:
            self.head=self.tail=n
        else:
            self.tail.next=n
            self.tail=n
    def show(self):
        t=self.head
        while t!=None:
            print(t.data)
            t=t.next
    def find(self,se):
        t=self.head
        while t.next!=None:
            if t.data==se:
                print(se,"is present in the list")
                return 
            t=t.next
        if t.next==None:
            print(se,"not present in the list")
s=sl()
while True:
    k=int(input())
    if k>0:
        s.create(k)
    else:
        se=int(input())
        s.find(se)
        break