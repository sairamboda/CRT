Pairwise swap of linked list 1

Given a linked list, write a program to swap elements pairwise.

Input Format

The input should be numbers (until user enters a negative value).

Constraints

1<=n<=10^7

Output Format

The output should be numbers in the list in separate line.

Sample Input 0

1
2
3
4
5
6
-1
Sample Output 0

2
1
4
3
6
5
Sample Input 1

1
2
3
4
5
-1
Sample Output 1

2
1
4
3
5


code:
class node:
    def __init__(self,data):
        self.data=data
        self.next=None
class sl:
    def __init__(self):
        self.head=None
        self.tail=None
    def create(self,data):
        n=node(data)
        if self.head==None:
            self.head=self.tail=n
            return
        else:
            self.tail.next=n
            self.tail=n
    def show(self,c):
        if c%2==0:
            while c>0:
                self.x1=self.head
                self.x2=self.head.next
                print(self.x2.data)
                print(self.x1.data)
                c=c-2
                if self.head.next.next:
                    self.head=self.head.next.next
                else:
                    break
        else:
            while c>0:
                self.x1=self.head
                self.x2=self.head.next
                if self.x2:
                    print(self.x2.data)
                if self.x1:
                    print(self.x1.data)
                c=c-2
                p=self.head.next
                if p:
                    
                    if p.next:
                        self.head=self.head.next.next
                    else:
                        print(self.tail)

                    
        
s=sl()
c=0
while True:
    k=int(input())
    if k>0:
        s.create(k)
        c+=1
    else:
        s.show(c)
        break
        
        

